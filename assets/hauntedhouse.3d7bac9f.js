import{S as K,O as X,h as Y,U as d,a,l as F,j as u,z as R,G as W,B as H,X as $,k as J,n as Q,D as V,o as T,P as Z,W as _,K as ee,b as te}from"./three.module.ebe9e46f.js";import{O as oe}from"./OrbitControls.cbb81cef.js";import{G as se}from"./dat.gui.module.fa9eec39.js";import"./RectAreaLightHelper.544d574d.js";const ae=`<h1>demo</h1>
<ul>
<li>
<p>haunted house</p>
</li>
<li>
<p>\u5728\u8BBE\u7F6E\u5B8C fog \u540E\uFF0C\u53EF\u4EE5\u901A\u8FC7 renderer.setClearColor \u6765\u9690\u85CF\u5E73\u9762\u8FB9\u754C\uFF0C\u53EF\u4EE5\u8BA9\u6574\u4E2A\u754C\u9762\u90FD\u8FDB\u5165\u8BE5\u989C\u8272\u7684\u72B6\u6001\u4E2D\u3002\u8BA9\u5176\u503C\u4E0E fog \u989C\u8272\u4E00\u81F4\uFF0C\u53EF\u4EE5\u8FBE\u5230\u878D\u5408\u7684\u60C5\u5883\u3002</p>
</li>
<li>
<p>go through each object of your scene and decide if that object can cast and/or receive shadows</p>
</li>
<li>
<p>task:
add new objects
create real ghosts
names on graves
animate the camera instead of using the orbit controls</p>
</li>
</ul>
`,q=document.querySelector("canvas.webgl"),ne=document.querySelector("div#md");ne.innerHTML=ae;const s={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{s.width=window.innerWidth,s.height=window.innerHeight,h.aspect=s.width/s.height,h.updateProjectionMatrix(),p.setSize(s.width,s.height),p.setPixelRatio(Math.min(window.devicePixelRatio,2))});const l=new se,o=new K,re=new X("#262837",1,15);o.fog=re;const e=new Y,ie=e.load("/textures/door/color.jpg"),de=e.load("/textures/door/alpha.jpg"),ce=e.load("/textures/door/ambientOcclusion.jpg"),he=e.load("/textures/door/height.jpg"),pe=e.load("/textures/door/normal.jpg"),we=e.load("/textures/door/metalness.jpg"),ue=e.load("/textures/door/roughness.jpg"),le=e.load("/textures/bricks/color.jpg"),me=e.load("/textures/bricks/ambientOcclusion.jpg"),ge=e.load("/textures/bricks/normal.jpg"),xe=e.load("/textures/bricks/roughness.jpg"),z=e.load("/textures/grass/color.jpg"),j=e.load("/textures/grass/ambientOcclusion.jpg"),v=e.load("/textures/grass/normal.jpg"),A=e.load("/textures/grass/roughness.jpg");z.repeat.set(8,8);j.repeat.set(8,8);v.repeat.set(8,8);A.repeat.set(8,8);z.wrapS=d;j.wrapS=d;v.wrapS=d;A.wrapS=d;z.wrapT=d;j.wrapT=d;v.wrapT=d;A.wrapT=d;const c=new a(new F(20,20),new u({map:z,aoMap:j,normalMap:v,roughnessMap:A}));c.geometry.setAttribute("uv2",new R(c.geometry.attributes.uv.array,2));c.rotation.x=-Math.PI/2;c.position.y=0;l.add(c.position,"y").name("FloorPositionY").min(-2).max(2).step(1e-4);o.add(c);const m=new W;o.add(m);const f=new a(new H(4,2.5,4),new u({map:le,aoMap:me,normalMap:ge,roughnessMap:xe}));f.geometry.setAttribute("uv2",new R(f.geometry.attributes.uv.array,2));f.position.y=2.5/2;m.add(f);const I=new a(new $(3.5,1,4),new u({color:"#b35f45"}));I.position.y=2.5+1/2;I.rotation.y=-Math.PI/4;m.add(I);const y=new a(new F(2.2,2.2,100,100),new u({map:ie,transparent:!0,alphaMap:de,aoMap:ce,displacementMap:he,displacementScale:.1,normalMap:pe,metalnessMap:we,roughnessMap:ue}));y.geometry.setAttribute("uv2",new R(y.geometry.attributes.uv.array,2));y.position.y=1;y.position.z=4/2+.01;m.add(y);const k=new J(1,16,16),L=new u({color:"#89c854"}),C=new a(k,L);C.scale.set(.5,.5,.5);C.position.set(.8,.2,2.2);const P=new a(k,L);P.scale.set(.25,.25,.25);P.position.set(1.4,.1,2.1);const G=new a(k,L);G.scale.set(.4,.4,.4);G.position.set(-.8,.1,2.2);const O=new a(k,L);O.scale.set(.15,.15,.15);O.position.set(-1,.05,2.6);m.add(C,P,G,O);const B=new W;o.add(B);const Me=new H(.6,.8,.2),be=new u({color:"#b2b6b1"});for(let t=0;t<50;t++){const x=Math.random()*Math.PI*2,M=3.5+Math.random()*5.5,S=Math.sin(x)*M,U=Math.cos(x)*M,b=new a(Me,be);b.rotation.y=(Math.random()-.5)*.4,b.rotation.z=(Math.random()-.5)*.4,b.position.set(S,.3,U),b.castShadow=!0,B.add(b)}const D=new Q("#b9d5ff",.12);l.add(D,"intensity").name("ALIntensity").min(0).max(1).step(1e-4);o.add(D);const w=new V("#b9d5ff",.12);w.position.set(4,5,-2);l.add(w,"intensity").name("MLIntensity").min(0).max(1).step(.001);l.add(w.position,"x").min(-5).max(5).step(.001);l.add(w.position,"y").min(-5).max(5).step(.001);l.add(w.position,"z").min(-5).max(5).step(.001);o.add(w);const g=new T("#ff7d46",1,7);g.position.set(0,2.2,2.7);m.add(g);const n=new T("#ff00ff",2,3);o.add(n);const r=new T("#00ffff",2,3);o.add(r);const i=new T("#ffff00",2,3);o.add(i);const h=new Z(75,s.width/s.height,.1,100);h.position.z=8;h.position.y=2;o.add(h);const N=new oe(h,q);N.enableDamping=!0;const p=new _({canvas:q});p.setSize(s.width,s.height);p.setClearColor("#262837");p.shadowMap.enabled=!0;w.castShadow=!0;g.castShadow=!0;n.castShadow=!0;r.castShadow=!0;i.castShadow=!0;f.castShadow=!0;C.castShadow=!0;P.castShadow=!0;G.castShadow=!0;O.castShadow=!0;c.receiveShadow=!0;g.shadow.mapSize.width=256;g.shadow.mapSize.height=256;g.shadow.camera.far=7;n.shadow.mapSize.width=256;n.shadow.mapSize.height=256;n.shadow.camera.far=7;r.shadow.mapSize.width=256;r.shadow.mapSize.height=256;r.shadow.camera.far=7;i.shadow.mapSize.width=256;i.shadow.mapSize.height=256;i.shadow.camera.far=7;p.shadowMap.type=ee;const fe=new te,E=()=>{const t=fe.getElapsedTime(),x=t*.5;n.position.x=Math.sin(x)*4,n.position.z=Math.cos(x)*4,n.position.y=Math.sin(t*3);const M=-t*.32;r.position.x=Math.sin(M)*5,r.position.z=Math.cos(M)*5,r.position.y=Math.sin(t*4)+Math.sin(t*2.5);const S=-t*.18;i.position.x=Math.sin(S)*(7+Math.sin(t*.32)),i.position.z=Math.cos(S)*(7+Math.sin(t*.5)),i.position.y=Math.sin(t*4)+Math.sin(t*2.5),N.update(),p.render(o,h),window.requestAnimationFrame(E)};E();
