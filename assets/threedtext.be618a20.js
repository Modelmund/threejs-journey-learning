import{p as P,F as z,q as E,r as F,S as L,h as q,s as H,a as x,m as j,P as C,W as G,b as O}from"./three.module.ebe9e46f.js";import{O as R}from"./OrbitControls.cbb81cef.js";import"./dat.gui.module.fa9eec39.js";class W extends P{constructor(t){super(t)}load(t,e,n,h){const s=this,o=new z(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(s.withCredentials),o.load(t,function(i){let c;try{c=JSON.parse(i)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),c=JSON.parse(i.substring(65,i.length-2))}const d=s.parse(c);e&&e(d)},n,h)}parse(t){return new I(t)}}class I{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],h=_(t,e,this.data);for(let s=0,o=h.length;s<o;s++)n.push(...h[s].toShapes());return n}}function _(u,t,e){const n=Array.from(u),h=t/e.resolution,s=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*h,o=[];let i=0,c=0;for(let d=0;d<n.length;d++){const p=n[d];if(p===`
`)i=0,c-=s;else{const w=N(p,h,i,c,e);i+=w.offsetX,o.push(w.path)}}return o}function N(u,t,e,n,h){const s=h.glyphs[u]||h.glyphs["?"];if(!s){console.error('THREE.Font: character "'+u+'" does not exists in font family '+h.familyName+".");return}const o=new E;let i,c,d,p,w,m,f,v;if(s.o){const a=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let r=0,k=a.length;r<k;)switch(a[r++]){case"m":i=a[r++]*t+e,c=a[r++]*t+n,o.moveTo(i,c);break;case"l":i=a[r++]*t+e,c=a[r++]*t+n,o.lineTo(i,c);break;case"q":d=a[r++]*t+e,p=a[r++]*t+n,w=a[r++]*t+e,m=a[r++]*t+n,o.quadraticCurveTo(w,m,d,p);break;case"b":d=a[r++]*t+e,p=a[r++]*t+n,w=a[r++]*t+e,m=a[r++]*t+n,f=a[r++]*t+e,v=a[r++]*t+n,o.bezierCurveTo(w,m,f,v,d,p);break}}return{offsetX:s.ha*t,path:o}}class A extends F{constructor(t,e={}){const n=e.font;if(n===void 0)super();else{const h=n.generateShapes(t,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),super(h,e)}this.type="TextGeometry"}}const B=`<h1>demo</h1>
<p>https://www.ilithya.rocks/</p>
<h1>typeface</h1>
<ul>
<li>how to get a typeface font
convert a font with a tool like: https://gero3.github.io/facetype.js</li>
</ul>
<h1>center the text</h1>
<ul>
<li>use the bounding
<ol>
<li>the bounding is an information associated with the geometry that tells what space is taken by that geometry. It can a box or a sphere.(frustum culling\u89C6\u9525\u88C1\u526A). \u901A\u8FC7\u7269\u4F53\u7684\u5916\u5F62\u5C3A\u5BF8\u751F\u6210\u957F\u5BBD\u9AD8\u7684\u8FB9\u754C\u6216\u662F\u7403\u4F53\u8FB9\u754C\u3002threejs\u4E2D\u9ED8\u8BA4\u662F\u7403\u4F53\u8FB9\u754C</li>
</ol>
</li>
</ul>
`,M=document.querySelector("canvas.webgl"),J=document.querySelector("div#md");J.innerHTML=B;const l={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{l.width=window.innerWidth,l.height=window.innerHeight,g.aspect=l.width/l.height,g.updateProjectionMatrix(),y.setSize(l.width,l.height),y.setPixelRatio(Math.min(window.devicePixelRatio,2))});const b=new L,D=new q,U=D.load("/textures/matcaps/5.png"),K=new W;K.load("/fonts/helvetiker_regular.typeface.json",u=>{const t=new A("Hello World",{font:u,size:.5,height:.2,curveSegments:6,bevelEnabled:!0,bevelThickness:.03,bevelSize:.02,bevelOffset:0,bevelSegments:4});t.center();const e=new H({matcap:U}),n=new x(t,e);b.add(n);const h=new j(.3,.2,20,45);for(let s=0;s<1e3;s++){const o=new x(h,e);b.add(o),o.position.set((Math.random()-.5)*20,(Math.random()-.5)*20,(Math.random()-.5)*20),o.rotation.set(Math.random()*Math.PI,Math.random()*Math.PI,Math.random()*Math.PI);const i=Math.random();o.scale.set(i,i,i)}});const g=new C(75,l.width/l.height,.1,100);g.position.z=3;b.add(g);const S=new R(g,M);S.enableDamping=!0;const y=new G({canvas:M});y.setSize(l.width,l.height);const Q=new O,T=()=>{Q.getElapsedTime(),S.update(),y.render(b,g),window.requestAnimationFrame(T)};T();
